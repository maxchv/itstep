
VIEWS (представления)
=====================

----

VIEWS
=====

**Представления** - это виртульная таблица чье содержание выбирается или получается из других таблиц.

Они работают в запросах и операторах DML точно также как и основные таблицы, но не содержат никаких собственных данных.

**Представление** - это фактически SQL запрос, который выполняется всякий раз, когда представление становится темой команды.

В представление можно добавлять функции SQL, команды WHERE и JOIN
и представлять данные как если бы они находились в одной таблице.

.. image:: http://www.dotnetinterviewquestions.in/contentpics/view....png

----

CREATE VIEW
===========

Преимущества использования представлений:
-----------------------------------------

1. Дает возможность гибкой настройки прав доступа к данным за счет того, что
   права даются не на таблицу, а на представление.
   Это очень удобно в случае если пользователю нужно дать права на отдельные
   строки таблицы или возможность получения не самих данных, а результата каких-то действий над ними.

2. Позволяет разделить логику хранения данных и программного обеспечения.
   Можно менять структуру данных, не затрагивая программный код, нужно лишь
   создать представления, аналогичные таблицам, к которым раньше обращались приложения.
   Это очень удобно когда нет возможности изменить программный код или к
   одной базе данных обращаются несколько приложений с различными требованиями к
   структуре данных.

3. Удобство в использовании за счет автоматического выполнения таких действий
   как доступ к определенной части строк и/или столбцов, получение данных
   из нескольких таблиц и их преобразование с помощью различных функций.

Создание представления
----------------------

.. sourcecode:: sql

    CREATE VIEW <имя_представления> AS
        SELECT <имя_поля1>, <имя_поля2>, ...
        FROM <имя_таблицы1>, <имя_таблицы2>, ...
        WHERE <условие>;

----

Пример
======

Таблица Products
----------------

.. sourcecode:: sql

    select ProductID, ProductName, Discontinued
        from Products
        limit 10;

+-----------+---------------------------------+--------------+
| ProductID | ProductName                     | Discontinued |
+-----------+---------------------------------+--------------+
|         1 | Chai                            | 0            |
+-----------+---------------------------------+--------------+
|         2 | Chang                           | 0            |
+-----------+---------------------------------+--------------+
|         3 | Aniseed Syrup                   | 0            |
+-----------+---------------------------------+--------------+
|         4 | Chef Anton's Cajun Seasoning    | 0            |
+-----------+---------------------------------+--------------+
|         5 | Chef Anton's Gumbo Mix          | 1            |
+-----------+---------------------------------+--------------+
|         6 | Grandma's Boysenberry Spread    | 0            |
+-----------+---------------------------------+--------------+
|         7 | Uncle Bob's Organic Dried Pears | 0            |
+-----------+---------------------------------+--------------+
|         8 | Northwoods Cranberry Sauce      | 0            |
+-----------+---------------------------------+--------------+
|         9 | Mishi Kobe Niku                 | 1            |
+-----------+---------------------------------+--------------+
|        10 | Ikura                           | 0            |
+-----------+---------------------------------+--------------+

Создать представление "Current Product List" для всех продуктов
(которые есть в наличии) из таблицы "Products".

----

Пример
======

Создаем выборку
---------------

.. sourcecode:: sql

    select ProductID, ProductName
    	from Products
        where  Discontinued="No";

Создаем представление
---------------------

Теперь можем создать представление на базе этого запроса:

.. sourcecode:: sql

    -- создание представления
    create view `Current Product List` as
        select ProductID, ProductName from Products
        where  Discontinued="No";

    -- выборка из представления
    select * from `Current Product List` limit 5;

+-----------+------------------------------+
| ProductID | ProductName                  |
+-----------+------------------------------+
|         1 | Chai                         |
+-----------+------------------------------+
|         2 | Chang                        |
+-----------+------------------------------+
|         3 | Aniseed Syrup                |
+-----------+------------------------------+
|         4 | Chef Anton's Cajun Seasoning |
+-----------+------------------------------+
|         6 | Grandma's Boysenberry Spread |
+-----------+------------------------------+

----

Изменение представления
=======================

.. You can update a view by using the following syntax:

Если представление ноебходимо изменить, то можно воспользоватся следующей командой

.. sourcecode:: sql

    CREATE OR REPLACE VIEW <имя_представления> AS
        SELECT <имя_поля1>, <имя_поля2>, ...
        FROM <имя_таблицы1>, <имя_таблицы2>, ...
        WHERE <условие>;


Пример
------

Теперь добавим поле Category к представлению "Current Product List".

.. sourcecode:: sql

    -- обновляем представление
    create or replace view `Current Product List` as
        select ProductID, ProductName, CategoryName from Products, Categories
        where  Discontinued="No" and Products.CategoryID=Categories.CategoryID;

    -- выборка из представления
    select * from `Current Product List` limit 5;

+-----------+----------------+--------------+
| ProductID | ProductName    | CategoryName |
+-----------+----------------+--------------+
|         1 | Chai           | Beverages    |
+-----------+----------------+--------------+
|         2 | Chang          | Beverages    |
+-----------+----------------+--------------+
|        34 | Sasquatch Ale  | Beverages    |
+-----------+----------------+--------------+
|        35 | Steeleye Stout | Beverages    |
+-----------+----------------+--------------+
|        38 | Cte de Blaye   | Beverages    |
+-----------+----------------+--------------+

----

Удаление представлений
======================

Синтаксис удаления представления из базы данных подобен синтаксису удаления базовых таблиц:

.. sourcecode:: sql

    DROP VIEW [IF EXISTS] <имя_представления>;

Пример
------

Удалить представление "Current Product List"

.. sourcecode:: sql

    DROP VIEW `Current Product List`;

----

Задание
=======

1. Создайте представление которое бы показывало заказчиков
   которые имеют наивысший рейтинг (rating). База данных Orders.

.notes: CREATE VIEW Highratings AS SELECT * FROM Customers WHERE rating=(SELECT MAX(rating) FROM Customers);

Таблица Customers
-----------------

+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
+------+----------+---------+--------+------+
| 2003 | Liu      | SanJose |    200 | 1002 |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
+------+----------+---------+--------+------+
| 2006 | Clemens  | London  |    100 | 1001 |
+------+----------+---------+--------+------+
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

2. Создайте представление которое бы показывало количество продавцов в каждом
   городе (city). База данных Orders.

.notes:  CREATE OR REPLACE VIEW Citynumber AS SELECT city, COUNT(DISTINCT snum) FROM Salespeople GROUP BY city;

Таблица Salespeople
-------------------

+------+---------+-----------+------+
| snum | sname   | city      | comm |
+------+---------+-----------+------+
| 1001 | Peel    | London    | 0.12 |
+------+---------+-----------+------+
| 1002 | Serres  | San Jose  | 0.13 |
+------+---------+-----------+------+
| 1003 | Axelrod | New York  | 0.10 |
+------+---------+-----------+------+
| 1004 | Motika  | London    | 0.11 |
+------+---------+-----------+------+
| 1007 | Rifkin  | Barcelona | 0.15 |
+------+---------+-----------+------+


----

Обновление представления
========================

Представление может теперь изменяться командами модификации DML, но модификация
не будет воздействовать на само представление. Команды будут на самом деле
перенаправлены к базовой таблице:


.. sourcecode:: sql

         UPDATE Salesown
            SET city = 'Palo Alto'
            WHERE snum = 1004;

Его действие идентично выполнению той же команды в таблице Продавцов.
Однако, если значение комиссионных продавца будет обработано командой UPDATE

.. sourcecode:: sql

         UPDATE Salesown
            SET comm = .20
            WHERE snum = 1004;

она будет отвергнута, так как поле comm отсутствует в представлении Salesown.

----

КОМБИНИРОВАНИЕ ПРЕДИКАТОВ ПРЕДСТАВЛЕНИЙ И ОСНОВНЫХ ЗАПРОСОВ В ПРЕДСТАВЛЕНИЯХ
============================================================================

----

ГРУППОВЫЕ ПРЕДСТАВЛЕНИЯ
======================

----

ПРЕДСТАВЛЕНИЯ И ОБЪЕДИНЕНИЯ
===========================

----

ПРЕДСТАВЛЕНИЯ И ПОДЗАПРОСЫ
==========================


----

Задание
=======

1. Создайте представление которое бы показывало всех заказчиков которые имеют самые высокие оценки.

2. Создайте представление которое бы показывало номер продавца в каждом городе.

3. Создайте представление которое бы показывало усредненный и общий порядки для каждого продавца после его имени. Предполагается, что все имена - уникальны.

4. Создайте представление которое бы показывало каждого продавца с многочисленными заказчиками.

----

ЧТО НЕ МОГУТ ДЕЛАТЬ ПРЕДСТАВЛЕНИЯ
=================================

----


Полезные ссылки
===============

- `Понимание представлений`_
- `SQL Views`_
- `CREATE VIEW (Transact-SQL)`_
- `Представления (VIEW) в MySQL`_
- `CREATE VIEW Oracle`_

.. _Понимание представлений: http://www.sql.ru/docs/sql/u_sql/ch20.shtml

.. _SQL Views: http://www.w3schools.com/sql/sql_view.asp

.. _CREATE VIEW (Transact-SQL): https://msdn.microsoft.com/ru-ru/library/ms187956(v=sql.120).aspx

.. _Представления (VIEW) в MySQL: http://habrahabr.ru/post/47031/

.. _CREATE VIEW Oracle: http://sql-language.ru/create-view.html



