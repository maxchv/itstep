
Основы реляционной алгебры
=============================

----

    Реляционная алгебра базируется на теории множеств и является основой логики работы баз данных. 

    Основы теории реляционных баз данных, равно как и операции реляционной алгебры, были предложены Эдгаром Коддом во время работы в компании IBM

.. image:: https://upload.wikimedia.org/wikipedia/ru/5/58/Edgar_F_Codd.jpg


----

Операции реляционной алгебры
============================

Основные восемь операций реляционной алгебры: 
---------------------------------------------

Традиционные операции над множествами:

- Объединение
- Пересечение
- Вычитание
- Декартово произведение

Специальные реляционные операции:

- Выборка
- Проекция
- Соединение
- Деление

Результатом любой операции алгебры над отношениями **является еще одно отношение**, которое можно потом так же использовать в других операциях.

----

Проекция
========

Проекция является операцией, при которой из отношения выделяются атрибуты только из указанных доменов, то есть из таблицы выбираются только нужные столбцы, при этом, если получится несколько одинаковых кортежей, то в результирующем отношении остается только по одному экземпляру подобного кортежа.

Пример
------

Таблица People

====== ==== =======
Name	Age	Weight
====== ==== =======
Harry	34	80

Sally	28	64

George	29	70

Helena	54	54

Peter	34	80
====== ==== =======

Результат проекции: π\ :sub:`(Age, Weight)`\ People

=== ======
Age	Weight
=== ======
28	64

29	70

54	54

34	80
=== ======

Эквивалентный SQL-запрос:

.. sourcecode:: sql

    SELECT DISTINCT Age, Weight FROM People;

Примечательно, что в SQL для полного соответствия операции проекции необходимо указывать ключевое слово DISTINCT, поскольку без него строка с возрастом 34 и весом 80 отобразится дважды, что отличается от результата реляционной операции проекции1.


----

Выборка
=======

Выборка — это операция, которая выделяет множество строк в таблице, удовлетворяющих заданным условиям. 

Условием может быть любое логическое выражение. 

Пример
------

Таблица People

====== ==== =======
Name	Age	Weight
====== ==== =======
Harry	34	80

Sally	28	64

George	29	70

Helena	54	54

Peter	34	80
====== ==== =======


Результаты выборки: σ\ :sub:`(Age≥34)`\ People

====== ==== =======
Name	Age	Weight
====== ==== =======
Harry	34	80

Helena	54	54

Peter	34	80
====== ==== =======

Эквивалентный SQL-запрос:

.. sourcecode:: sql

    SELECT * FROM People WHERE Age >= 34;

----

Выборка и проекция
==================

Совместим операторы проекции и выборки. Мы можем это сделать, потому что любой из операторов в результате возвращает отношение и в качестве аргументов использует также отношение.

Исходная таблица People

+----+--------+-----+--------+
| id | name   | age | weight |
+====+========+=====+========+
|  1 | Harry  |  34 |     80 |
+----+--------+-----+--------+
|  2 | Sally  |  28 |     64 |
+----+--------+-----+--------+
|  3 | George |  29 |     70 |
+----+--------+-----+--------+
|  4 | Helena |  54 |     54 |
+----+--------+-----+--------+
|  5 | Peter  |  34 |     80 |
+----+--------+-----+--------+

Результаты выборки: π\ :sub:`(name, age)`\ σ\ :sub:`(age>50)`\ People

+--------+-----+
| name   | age |
+========+=====+
| Helena |  54 |
+--------+-----+

Эквивалентный SQL-запрос:

.. sourcecode:: sql

    SELECT name, age FROM People WHERE age > 50;

или

.. sourcecode:: sql
    
    SELECT name, age FROM (SELECT * FROM People WHERE age > 50) AS t;

----

Ссылки
======

- `Основы реляционной алгебры`_
- `Реляционная алгебра. Операции реляционной алгебры`_



.. _Основы реляционной алгебры: http://habrahabr.ru/post/145381/

.. _Реляционная алгебра. Операции реляционной алгебры: http://migku.wikidot.com/gos-db-16


